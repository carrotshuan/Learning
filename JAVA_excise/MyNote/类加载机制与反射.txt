程序使用某个类时，如果该类还未被加载到内存中，则会通过加载、连接、初始化三个步骤来对该类进行初始化。

类加载：
类加载是将类的class文件读入内存，并为之创建一个java.lang.Class对象。即：程序中使用任何类时，系统都会为之创建一个java.lang.Class对象。
类的加载通常由类加载器完成，类加载器通常由JVM提供，JVM提供的这些类加载器通常被称系统类加载器。除此之外，开发者可以通过集成ClassLoader基础类来创建自己的类加载器。
JAVA虚拟机规范允许系统预先加载某些类。

类连接：
类加载之后，系统会位置生成一个对应的Class对象，接着将会进入连接阶段，连接阶段负责把类的二进制数据合并到JRE中。类连接分为如下三个阶段：
1. 验证：检验被加载类是否有正确的结构，并和其他类协调一致。（队伍集合，检查着装，编制）
2. 准备：为类变量分配内存，设置默认初始值。（发枪和装备）
3. 解析：将类的二进制数据中的符号引用替换成直接引用。（抹去姓名，执行任务）

类初始化：
对类中的变量进行初始化。在声明类变量及使用静态初始化块时，为类变量指定初始化值，其他情况下在类连接阶段时已经使用了默认值。

类初始化步骤：如果父类（及父类的父类）未被初始化，先初始化父类，然后加载和连接本类，再依次执行本类初始化语句。
何时初始化类？
1. 创建类的实例；
2. 调用类方法；
3. 访问类或接口的类变量；
4. 使用反射机制强制创建某个类或接口对应的java.lang.Class对象；
5. 初始化类的子类；
6. 直接使用java.exe命令运行某个主类。

特殊情况：
final型类变量，如果编译时可以确定值，则相当于宏变量。使用这种变量不会导致类的初始化。
